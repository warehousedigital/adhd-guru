<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Timecode Logger</title>
  <style>
    body {
      font-family: sans-serif;
      background-color: #1e1e1e;
      color: #f0f0f0;
      max-width: 600px;
      margin: 2rem auto;
      padding: 2rem;
    }
    select, button {
      font-size: 1rem;
      padding: 0.5rem;
      margin: 0.5rem 0;
      border-radius: 4px;
      border: 1px solid #444;
      background-color: #2b2b2b;
      color: #f0f0f0;
    }
    button:hover:enabled {
      background-color: #555;
      cursor: pointer;
    }
    .controls {
      display: flex;
      gap: 0.5rem;
      flex-wrap: wrap;
    }
    .timecode-display {
      font-size: 2rem;
      margin: 1rem 0;
    }
    ul {
      padding-left: 1rem;
    }
    .hidden {
      display: none;
    }
  </style>
</head>
<body>
  <h1>‚è±Ô∏è Timecode Logger</h1>

  <label for="start-time">Starting Timecode:</label>
  <select id="start-time">
    <option value="00:00:00:00">00:00:00:00</option>
    <option value="01:00:00:00">01:00:00:00</option>
    <option value="10:00:00:00">10:00:00:00</option>
    <option value="23:59:00:00">23:59:00:00</option>
  </select>

  <div class="controls">
    <button id="startBtn">Start</button>
    <button id="pauseBtn" disabled>Pause</button>
    <button id="markBtn" disabled>Mark</button>
    <button id="stopBtn" disabled>Stop</button>
  </div>

  <div class="timecode-display" id="timecode">00:00:00:00</div>

  <h2>Marked Timecodes</h2>
  <ul id="log"></ul>

  <div id="postActions" class="hidden">
    <button onclick="copyMarks()">üìã Copy</button>
    <button onclick="saveMarks()">üíæ Save</button>
  </div>

  <script>
    const fps = 25; // Change this if needed
    let interval;
    let running = false;
    let tc = { h: 0, m: 0, s: 0, f: 0 };
    const timeDisplay = document.getElementById("timecode");
    const log = document.getElementById("log");
    const startSelect = document.getElementById("start-time");
    const postActions = document.getElementById("postActions");

    function parseTimecode(tcString) {
      const [h, m, s, f] = tcString.split(":".map(Number));
      return { h, m, s, f };
    }

    function formatTimecode({ h, m, s, f }) {
      return [h, m, s, f].map(unit => String(unit).padStart(2, '0')).join(':');
    }

    function updateDisplay() {
      tc.f++;
      if (tc.f >= fps) {
        tc.f = 0; tc.s++;
      }
      if (tc.s >= 60) {
        tc.s = 0; tc.m++;
      }
      if (tc.m >= 60) {
        tc.m = 0; tc.h++;
      }
      timeDisplay.textContent = formatTimecode(tc);
    }

    document.getElementById("startBtn").onclick = () => {
      tc = parseTimecode(startSelect.value);
      interval = setInterval(updateDisplay, 1000 / fps);
      running = true;
      document.getElementById("pauseBtn").disabled = false;
      document.getElementById("markBtn").disabled = false;
      document.getElementById("stopBtn").disabled = false;
    };

    document.getElementById("pauseBtn").onclick = () => {
      if (running) {
        clearInterval(interval);
        document.getElementById("pauseBtn").textContent = "Resume";
      } else {
        interval = setInterval(updateDisplay, 1000 / fps);
        document.getElementById("pauseBtn").textContent = "Pause";
      }
      running = !running;
    };

    document.getElementById("markBtn").onclick = () => {
      const li = document.createElement("li");
      li.textContent = timeDisplay.textContent;
      log.appendChild(li);
    };

    document.getElementById("stopBtn").onclick = () => {
      clearInterval(interval);
      running = false;
      document.getElementById("pauseBtn").disabled = true;
      document.getElementById("markBtn").disabled = true;
      document.getElementById("stopBtn").disabled = true;
      postActions.classList.remove("hidden");
    };

    function copyMarks() {
      const times = Array.from(log.children).map(li => li.textContent).join("\n");
      navigator.clipboard.writeText(times).then(() => alert("Copied to clipboard!"));
    }

    function saveMarks() {
      const now = new Date();
      const date = now.toLocaleDateString("en-GB").replaceAll("/", "-");
      const time = now.toTimeString().slice(0, 5).replace(":", "-");
      const name = `Timecode Marker ${date} ${time}.txt`;
      const blob = new Blob([
        Array.from(log.children).map(li => li.textContent).join("\n")
      ], { type: "text/plain" });
      const url = URL.createObjectURL(blob);
      const a = document.createElement("a");
      a.href = url;
      a.download = name;
      a.click();
      URL.revokeObjectURL(url);
    }
  </script>
</body>
</html>
